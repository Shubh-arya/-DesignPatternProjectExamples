package practice;

import data_strucuture_and_algorithms.stack.LLNode;

public class ReverseStringUsingRecursionLLNode {

	// Given an string array
	static String[] values = { "aa", "bb", "cc", "dd" };

	static LLNode<String> llList;

	static <T> LLNode<T> insertAtEnd(LLNode<T> list, T value) {
		if (list != null) {
			list.setLink(insertAtEnd(list.getLink(), value));
		} else {
			list = new LLNode<T>(value);
		}
		return list;
	}

	static void reversePrintLinkedList(LLNode<String> node) {
		if (node != null) {
			reversePrintLinkedList(node.getLink());
			System.out.println(node.getLink());
		}
	}

	public static void main(String[] args) {
		LLNode<String> link = null;
		for (String value : values) {
			link = insertAtEnd(link, value);
		}
		reversePrintLinkedList(llList);
	}
}
