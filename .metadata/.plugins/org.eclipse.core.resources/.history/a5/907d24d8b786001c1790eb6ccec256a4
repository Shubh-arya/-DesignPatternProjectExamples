package data_strucuture_and_algorithms.binarysearch;

public class FirstAndLastPositionOfInteger {
	public static void main(String[] args) {
		int[] arr = { 1, 2, 3, 6, 6, 6, 6, 7, 8, 9, 9, 17 };
		int target = 6;
		int firstIndex = search(arr, target, true);
		int endIndex = search(arr, target, false);
		
		System.out.println("start and end indexes are:" + firstIndex + "   " endIndex);
	}

	private static int search(int[] arr, int target, boolean isFirst) {
		int rs = -1;
		int s = 0;
		int e = arr.length - 1;
		while (s <= e) {
			int m = s + (e - s) / 2;
			if (target > arr[m]) {
				s = m + 1;
			} else if (target < arr[m]) {
				e = m - 1;
			} else {
				rs = m;
				if (isFirst) {
					e = m - 1;
				} else {
					s = m + 1;
				}
			}
		}
		return 0;
	}
}
