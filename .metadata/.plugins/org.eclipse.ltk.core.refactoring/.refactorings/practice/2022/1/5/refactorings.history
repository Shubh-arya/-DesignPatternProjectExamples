<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;stack_examples.PostFixEvalution&apos; to &apos;PostFixEvalutor&apos;&#x0D;&#x0A;- Original project: &apos;practice&apos;&#x0D;&#x0A;- Original element: &apos;stack_examples.PostFixEvalution&apos;&#x0D;&#x0A;- Renamed element: &apos;stack_examples.PostFixEvalutor&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;PostFixEvalution&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;stack_examples{PostFixEvalution.java[PostFixEvalution" matchStrategy="1" name="PostFixEvalutor" qualified="false" references="true" similarDeclarations="false" stamp="1643043909795" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;data_strucuture_and_algorithms.stack.PostFixException&apos; to &apos;PostFixEvalutionException&apos;&#x0D;&#x0A;- Original project: &apos;practice&apos;&#x0D;&#x0A;- Original element: &apos;data_strucuture_and_algorithms.stack.PostFixException&apos;&#x0D;&#x0A;- Renamed element: &apos;data_strucuture_and_algorithms.stack.PostFixEvalutionException&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;PostFixException&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;data_strucuture_and_algorithms.stack{PostFixException.java[PostFixException" matchStrategy="1" name="PostFixEvalutionException" qualified="false" references="true" similarDeclarations="false" stamp="1643043940385" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;llNode&apos; from expression &apos;new LLNode&lt;String&gt;(&quot;bb&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;practice&apos;&#x0D;&#x0A;- Variable name: &apos;llNode&apos;&#x0D;&#x0A;- Destination method: &apos;practice.ReverseStringUsingRecursionLLNode.createLinkedList()&apos;&#x0D;&#x0A;- Variable expression: &apos;new LLNode&lt;String&gt;(&quot;bb&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;llNode&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;practice{ReverseStringUsingRecursionLLNode.java" name="llNode" replace="true" selection="319 24" stamp="1643130896631" varType="false" version="1.0"/>
</session>